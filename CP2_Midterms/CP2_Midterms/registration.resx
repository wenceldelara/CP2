<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>